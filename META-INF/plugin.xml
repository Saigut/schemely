<!DOCTYPE idea-plugin PUBLIC "Plugin/DTD" "http://plugins.intellij.net/plugin.dtd">
<idea-plugin>
  <module-components>
    <component>
      <implementation-class>schemely.config.SchemeFacetListener</implementation-class>
    </component>
  </module-components>

  <name>Schemely</name>
  <id>schemely</id>
  <description>Plugin for Scheme language support</description>
  <category>Custom Languages</category>
  <version>0.0.2</version>
  <vendor logo="/schemely/icons/lambda.png" url="https://github.com/cmf/schemely">Colin Fleming</vendor>
  <idea-version since-build="103.72"/>

  <extensions defaultExtensionNs="com.intellij">
    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
    <fileTypeFactory implementation="schemely.file.SchemeFileTypeLoader"/>
    <lang.braceMatcher language="Scheme"
                       implementationClass="schemely.highlighter.SchemeBraceMatcher"/>
    <syntaxHighlighter key="Scheme"
                       implementationClass="schemely.highlighter.SchemeSyntaxHighlighter"/>
    <colorSettingsPage implementation="schemely.highlighter.SchemeColorsAndFontsPage"/>
    <lang.commenter language="Scheme"
                    implementationClass="schemely.highlighter.SchemeCommenter"/>
    <lang.parserDefinition language="Scheme"
                           implementationClass="schemely.parser.SchemeParserDefinition"/>
    <lang.foldingBuilder language="Scheme"
                         implementationClass="schemely.SchemeFoldingBuilder"/>
    <lang.psiStructureViewFactory language="Scheme"
                                  implementationClass="schemely.structure.SchemeStructureViewBuilderFactory"/>
    <lang.formatter language="Scheme"
                    implementationClass="schemely.formatter.SchemeFormattingModelBuilder"/>
    <codeStyleSettingsProvider
      implementation="schemely.formatter.codeStyle.SchemeCodeStyleSettingsProvider"/>
    <lang.findUsagesProvider language="Scheme"
                             implementationClass="schemely.findUsages.SchemeFindUsagesProvider"/>
    <referencesSearch implementation="schemely.findUsages.SchemeIdentifierSearch"/>

    <lang.namesValidator language="Scheme"
                         implementationClass="schemely.utils.SchemeNamesValidator"/>
    <completion.contributor language="Scheme"
                            implementationClass="schemely.completion.SchemeCompletionContributor"/>
    <compilerSettingsFactory implementation="schemely.compiler.SchemeCompilerSettingsFactory"/>
    <fileTemplateGroup implementation="schemely.actions.SchemeTemplatesFactory"/>
    <fileTypeIndentOptionsProvider
      implementation="schemely.formatter.SchemeIndentOptionsProvider"/>
    <quoteHandler fileType="Scheme" className="schemely.editor.SchemeQuoteHandler"/>
    <annotator language="Scheme" implementationClass="schemely.annotator.SchemeAnnotator"/>

    <gotoSymbolContributor implementation="schemely.gotoclass.SchemeGoToSymbolContributor"/>

    <stubElementTypeHolder class="schemely.parser.AST"/>

    <stubIndex implementation="schemely.psi.stubs.index.SchemeClassNameIndex"/>
    <stubIndex implementation="schemely.psi.stubs.index.SchemeFullScriptNameIndex"/>

    <extendWordSelectionHandler
      implementation="schemely.editor.selection.SchemeListSelectioner"/>
    <extendWordSelectionHandler
      implementation="schemely.editor.selection.SchemeLiteralSelectioner"/>

    <frameworkSupport implementation="schemely.config.SchemeFacetSupportProvider"/>
    <applicationService serviceInterface="schemely.settings.SchemeProjectSettings"
                        serviceImplementation="schemely.settings.SchemeProjectSettings"/>

    <projectService serviceInterface="schemely.psi.util.SchemePsiElementFactory"
                    serviceImplementation="schemely.psi.util.SchemePsiElementFactoryImpl"/>

    <projectConfigurable implementation="schemely.settings.SchemeConfigurable"/>
    <projectService serviceInterface="schemely.settings.SchemeProjectSettings"
                    serviceImplementation="schemely.settings.SchemeProjectSettings"/>

    <toolWindow id="Scheme.REPL" secondary="true" icon="/schemely/icons/lambda.png" anchor="right" factoryClass="schemely.repl.toolwindow.REPLToolWindowFactory"/>
    <editorActionHandler action="EditorEnter" implementationClass="schemely.repl.toolwindow.actions.REPLEnterAction" order="FIRST"/>
  </extensions>

  <application-components>
    <component>
      <implementation-class>schemely.config.SchemeFacetLoader</implementation-class>
      <interface-class>schemely.config.SchemeFacetLoader</interface-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <implementation-class>schemely.compiler.SchemeCompilerSettings</implementation-class>
    </component>
    <!--<component>-->
    <!--<implementation-class>schemely.repl.ReplToolWindow</implementation-class>-->
    <!--</component>-->
    <component>
      <implementation-class>schemely.compiler.CompilerProjectComponent</implementation-class>
    </component>
  </project-components>

  <actions>
    <!-- Create file actions -->
    <!--<action id="Scheme.SchemeFile" class="schemely.actions.NewSchemeFileAction"-->
            <!--text="Scheme File" description="Create new Scheme File">-->
      <!--<add-to-group group-id="NewGroup" anchor="last"/>-->
    <!--</action>-->

    <!--<action id="Scheme.JavaToScheme" class="schemely.conversion.JavaToSchemeAction"-->
            <!--text="Convert Java File To Scheme" description="Convert Java File To Scheme">-->
      <!--<add-to-group group-id="RefactoringMenu" anchor="last"/>-->
      <!--<add-to-group group-id="EditorTabPopupMenu" anchor="last"/>-->
      <!--<keyboard-shortcut first-keystroke="control shift G" keymap="$default"/>-->
    <!--</action>-->

    <!-- REPL-related actions -->
    <group id="Scheme.REPL.Group"
           class="schemely.repl.actions.SchemeReplActionGroup"
           text="Scheme REPL" description="Scheme" popup="true">

      <action id="schemely.repl.actions.LoadSchemeFileInConsoleAction"
              class="schemely.repl.actions.LoadSchemeFileInConsoleAction"
              text="Load file in REPL">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift L"/>
      </action>

      <action id="schemely.repl.actions.RunSelectedTextAction"
              class="schemely.repl.actions.RunSelectedTextAction"
              text="Run selected text in REPL">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift J"/>
      </action>

      <action id="schemely.repl.actions.RunLastSExprAction"
              class="schemely.repl.actions.RunLastSExprAction"
              text="Execute last S-expression in REPL">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift H"/>
      </action>

      <action id="schemely.repl.actions.RunTopSExprAction"
              class="schemely.repl.actions.RunTopSExprAction"
              text="Run Top S-expression in REPL">
        <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift G"/>
      </action>

      <add-to-group group-id="ToolsMenu" anchor="last"/>

    </group>

    <action id="schemely.actions.RunSchemeConsoleAction"
            class="schemely.repl.actions.NewSchemeConsoleAction" text="Start Scheme Console"
            description="Runs Scheme REPL">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift F10"/>
    </action>

  </actions>

</idea-plugin>
